Project overview

"propylene" is the final project for a compilers course. 
It aims to generete a proper set of classes from a PROFETA plan, 
which uses an AgentSpeak-like syntax.


Usage

Currently, propylene is in 'testing' mode.
To execute the parser on some input file, type:

> make parse SRC=input_file_name


Test input files:

1. base-test (default)      : Plans without condition; mental attitudes have no arguments;
2. cond-test                : Plans with condition (NO lambdas); mental attitudes have no arguments;
3. args-test                : Plans with condition; mental attitudes have arguments;
4. lambda-test              : Plans with condition and lambdas; mental attitudes have arguments;

5. lexical-err              : Plans with lexical errors (illegal characters);
6. production-err           : Plans with syntax errors, which are included in error productions (Augmented Propylene);
7. syntax-err               : Plans with syntax errors;
8. type-err                 : Plans with 'Type Mismatch' semantic errors;
9. unbound-err              : Plans with 'Unbounded Variable' semantic errors;

10 real-world (coming soon) : Plans which closely resemble a 'real world' strategy.












